openapi: 3.0.0
info:
  title: Stocker API
  description: API Documentation for Stocker
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local development server
tags:
  - name: auth
    description: Authentication

components:
  schemas:
    SuccessfulAuthResponse:
      type: object
      required:
        - access
        - user
      properties:
        access:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJh...
        user:
          type: object
          required:
            - id
            - username
            - first_name
            - last_name
            - email
          properties:
            id:
              type: string
              example: c0eb5d1a-2f13-44a4-86d7-e4e0761d7e2d
            username:
              type: string
              example: user
            first_name:
              type: string
              example: first_name
            last_name:
              type: string
              example: last_name
            email:
              type: string
              format: email
              example: user@example.com
            avatar:
              type: string
              nullable: true
              example: http://localhost:8000/media/base/images/user/{user.id}/{filename}
            bio:
              type: string
              nullable: true
              example: Software Engineer

paths:
  /auth/login/:
    post:
      tags:
        - auth
      operationId: user_login
      summary: Logs the user and sets a refresh cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              description: |
                Refresh cookie containing the refresh_token.
                Example: `Set-Cookie: refresh_token=abc123; HttpOnly; Path=/; Secure`
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthResponse'
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing email and password
                  value:
                    email: ["This field is required."]
                    password: ["This field is required."]
                missing_email:
                  summary: Missing email only
                  value:
                    email: ["This field is required."]
                missing_password:
                  summary: Missing password only
                  value:
                    password: ["This field is required."]
                blank_fields:
                  summary: Blank email and password
                  value:
                    email: ["Please enter your email address."]
                    password: ["Please enter your password."]
                blank_email:
                  summary: Blank email only
                  value:
                    email: ["Please enter your email address."]
                blank_password:
                  summary: Blank password only
                  value:
                    password: ["Please enter your password."]
                invalid_credentials:
                  summary: Invalid credentials
                  value:
                    email: "Login Unsuccessful. Please check your email and password."
        '500':
          description: Server error

  /auth/signup/:
    post:
      tags:
        - auth
      operationId: user_signup
      summary: Registers a new user and sets a refresh cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - first_name
                - last_name
                - email
                - password1
                - password2
              properties:
                username:
                  type: string
                  example: user12
                first_name:
                  type: string
                  example: first_name
                last_name:
                  type: string
                  example: last_name
                email:
                  type: string
                  format: email
                  example: user@example.com
                password1:
                  type: string
                  format: password
                  example: secret123
                password2:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Successful registration
          headers:
            Set-Cookie:
              description: |
                Refresh cookie containing the refresh_token.
                Example: `Set-Cookie: refresh_token=abc123; HttpOnly; Path=/; Secure`
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing required fields
                  value:
                    username: ["This field is required."]
                    first_name: ["This field is required."]
                    last_name: ["This field is required."]
                    email: ["This field is required."]
                    password1: ["This field is required."]
                    password2: ["This field is required."]
                blank_fields:
                  summary: Blank fields
                  value:
                    username: ["This field may not be blank."]
                    first_name: ["This field may not be blank."]
                    last_name: ["This field may not be blank."]
                    email: ["This field may not be blank."]
                    password1: ["This field may not be blank."]
                    password2: ["This field may not be blank."]
                existing_username:
                  summary: Existing username
                  value:
                    username: ["user with this username already exists."]
                existing_email:
                  summary: Existing email
                  value:
                    email: ["user with this email already exists."]
                similar_to_username_password:
                  summary: Similar to username password
                  value:
                    password: ["This password is too similar to the username."]
                similar_to_email_password:
                  summary: Similar to email password
                  value:
                    password: ["This password is too similar to the email address."]
                similar_to_first_name_password:
                  summary: Similar to first name password
                  value:
                    password: ["This password is too similar to the first name."]
                similar_to_last_name_password:
                  summary: Similar to last name password
                  value:
                    password: ["This password is too similar to the last name."]
                common_password:
                  summary: Common password
                  value:
                    password: ["This password is too common."]
                short_password:
                  summary: Short password
                  value:
                    password: ["This password is too short. It must contain at least 8 characters."]
                numeric_password:
                  summary: Numeric password
                  value:
                    password: ["This password is entirely numeric."]
                password_mismatch:
                  summary: Password mismatch
                  value:
                    password: ["The two password fields do not match."]
        '500':
          description: Server error
  /auth/token/:
    post:
      tags:
        - auth
      operationId: user_token
      summary: Returns for the user refresh and access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Successful token generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJ...
                  access:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJh... 
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing email and password
                  value:
                    email: ["This field is required."]
                    password: ["This field is required."]
                missing_email:
                  summary: Missing email only
                  value:
                    email: ["This field is required."]
                missing_password:
                  summary: Missing password only
                  value:
                    password: ["This field is required."]
                blank_fields:
                  summary: Blank email and password
                  value:
                    email: ["Please enter your email address."]
                    password: ["Please enter your password."]
                blank_email:
                  summary: Blank email only
                  value:
                    email: ["Please enter your email address."]
                blank_password:
                  summary: Blank password only
                  value:
                    password: ["Please enter your password."]
                invalid_credentials:
                  summary: Invalid credentials
                  value:
                    detail: "No active account found with the given credentials"
        '500':
          description: Server error
  /auth/token/refresh/:
    post:
      tags:
        - auth
      operationId: user_token_refresh
      summary: Refreshes user's access token
      parameters:
        - name: refresh_token
          in: cookie
          required: true
          schema:
            type: string
            example: eyJ0eXAiOiJKV1QiLCJh...
          description: Refresh token stored in cookies
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthResponse'
        '401':
          description: Missing or invalid refresh token
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing refresh token
                  value:
                    error: "No refresh_token found in cookies."
                user_id_mismatch:
                  summary: User ID mismatch
                  value:
                    error: "Invalid or expired token."
                user_not_found:
                  summary: User not found
                  value:
                    error: "Invalid or expired token."
        '500':
          description: Server error