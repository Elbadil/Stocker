# yaml-language-server: $schema=https://spec.openapis.org/oas/3.1/schema/2021-09-28
openapi: 3.1.0
info:
  title: Stocker API
  description: API Documentation for Stocker
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local development server
tags:
  - name: auth
    description: Authentication

components:
  schemas:
    User:
      type: object
      required:
        - id
        - username
        - first_name
        - last_name
        - email
        - avatar
        - bio
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426655440000"
        username:
          type: string
          example: user12
        first_name:
          type: string
          example: first_name
        last_name:
          type: string
          example: last_name
        email:
          type: string
          format: email
          example: user@example.com
        avatar:
          type: string
          nullable: true
          example: https://example.com/avatar
        bio:
          type: string
          nullable: true
          example: My bio
    SuccessfulAuthResponse:
      type: object
      required:
        - access
        - user
      properties:
        access:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJh...
        user:
          $ref: '#/components/schemas/User'
    UserActivity:
      type: object
      required:
        - id
        - user
        - action
        - model_name
        - object_ref
        - created_at
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426655440000"
        user:
          type: object
          properties:
            username:
              type: string
              example: user12
            avatar:
              type: string
              nullable: true
              example: https://example.com/avatar
        action:
          type: string
          example: created
        model_name:
          type: string
          example: Product
        object_ref:
          type: array
          example: ["item_1", "item_2"]
        created_at:
          type: string
          format: date-time
          example: 28/06/2023, 10:00:00

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /auth/login/:
    post:
      tags:
        - auth
      operationId: user_login
      summary: Logs the user and sets a refresh cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              description: |
                Refresh cookie containing the refresh_token.
                Example: `Set-Cookie: refresh_token=abc123; HttpOnly; Path=/; Secure`
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthResponse'
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing email and password
                  value:
                    email: ["This field is required."]
                    password: ["This field is required."]
                missing_email:
                  summary: Missing email only
                  value:
                    email: ["This field is required."]
                missing_password:
                  summary: Missing password only
                  value:
                    password: ["This field is required."]
                blank_fields:
                  summary: Blank email and password
                  value:
                    email: ["Please enter your email address."]
                    password: ["Please enter your password."]
                blank_email:
                  summary: Blank email only
                  value:
                    email: ["Please enter your email address."]
                blank_password:
                  summary: Blank password only
                  value:
                    password: ["Please enter your password."]
                invalid_credentials:
                  summary: Invalid credentials
                  value:
                    email: "Login Unsuccessful. Please check your email and password."
        '500':
          description: Server error

  /auth/signup/:
    post:
      tags:
        - auth
      operationId: user_signup
      summary: Registers a new user and sets a refresh cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - first_name
                - last_name
                - email
                - password1
                - password2
              properties:
                username:
                  type: string
                  example: user12
                first_name:
                  type: string
                  example: first_name
                last_name:
                  type: string
                  example: last_name
                email:
                  type: string
                  format: email
                  example: user@example.com
                password1:
                  type: string
                  format: password
                  example: secret123
                password2:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Successful registration
          headers:
            Set-Cookie:
              description: |
                Refresh cookie containing the refresh_token.
                Example: `Set-Cookie: refresh_token=abc123; HttpOnly; Path=/; Secure`
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing required fields
                  value:
                    username: ["This field is required."]
                    first_name: ["This field is required."]
                    last_name: ["This field is required."]
                    email: ["This field is required."]
                    password1: ["This field is required."]
                    password2: ["This field is required."]
                blank_fields:
                  summary: Blank fields
                  value:
                    username: ["This field may not be blank."]
                    first_name: ["This field may not be blank."]
                    last_name: ["This field may not be blank."]
                    email: ["This field may not be blank."]
                    password1: ["This field may not be blank."]
                    password2: ["This field may not be blank."]
                existing_username:
                  summary: Existing username
                  value:
                    username: ["user with this username already exists."]
                existing_email:
                  summary: Existing email
                  value:
                    email: ["user with this email already exists."]
                similar_to_username_password:
                  summary: Similar to username password
                  value:
                    password: ["This password is too similar to the username."]
                similar_to_email_password:
                  summary: Similar to email password
                  value:
                    password: ["This password is too similar to the email address."]
                similar_to_first_name_password:
                  summary: Similar to first name password
                  value:
                    password: ["This password is too similar to the first name."]
                similar_to_last_name_password:
                  summary: Similar to last name password
                  value:
                    password: ["This password is too similar to the last name."]
                common_password:
                  summary: Common password
                  value:
                    password: ["This password is too common."]
                short_password:
                  summary: Short password
                  value:
                    password: ["This password is too short. It must contain at least 8 characters."]
                numeric_password:
                  summary: Numeric password
                  value:
                    password: ["This password is entirely numeric."]
                password_mismatch:
                  summary: Password mismatch
                  value:
                    password: ["The two password fields do not match."]
        '500':
          description: Server error
  /auth/token/:
    post:
      tags:
        - auth
      operationId: user_token
      summary: Returns for the user refresh and access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Successful token generation
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJ...
                  access:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJh... 
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing email and password
                  value:
                    email: ["This field is required."]
                    password: ["This field is required."]
                missing_email:
                  summary: Missing email only
                  value:
                    email: ["This field is required."]
                missing_password:
                  summary: Missing password only
                  value:
                    password: ["This field is required."]
                blank_fields:
                  summary: Blank email and password
                  value:
                    email: ["Please enter your email address."]
                    password: ["Please enter your password."]
                blank_email:
                  summary: Blank email only
                  value:
                    email: ["Please enter your email address."]
                blank_password:
                  summary: Blank password only
                  value:
                    password: ["Please enter your password."]
                invalid_credentials:
                  summary: Invalid credentials
                  value:
                    detail: "No active account found with the given credentials"
        '500':
          description: Server error
  /auth/token/refresh/:
    post:
      tags:
        - auth
      operationId: user_token_refresh
      summary: Refreshes user's access token
      parameters:
        - name: refresh_token
          in: cookie
          required: true
          schema:
            type: string
            example: eyJ0eXAiOiJKV1QiLCJh...
          description: Refresh token stored in cookies
      responses:
        '200':
          description: Successful token refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulAuthResponse'
        '401':
          description: Missing or invalid refresh token
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing refresh token
                  value:
                    error: "No refresh_token found in cookies."
                user_id_mismatch:
                  summary: User ID mismatch
                  value:
                    error: "Invalid or expired token."
                user_not_found:
                  summary: User not found
                  value:
                    error: "Invalid or expired token."
        '500':
          description: Server error
  /auth/token/verify/:
    post:
      tags:
        - auth
      operationId: user_token_verify
      summary: Verifies user's access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: eyJ0eXAiOiJKV1QiLCJh...
      responses:
        '200':
          description: Successful token verification
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Invalid access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Token is invalid or expired"
                  code:
                    type: string
                    example: "token_not_valid"
        '500':
          description: Server error
  /auth/password-reset/request/:
    post:
      tags:
        - auth
      operationId: user_password_reset_request
      summary: Requests a password reset email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: Successful password reset request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: If the email is associated with an account, a reset link has been sent.
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_email:
                  summary: Missing email
                  value:
                    email: Email is required.
                invalid_email:
                  summary: Invalid email
                  value:
                    email: Enter a valid email address.
        '500':
          description: Server error
  /auth/password-reset/{uidb64}/{token}/:
    post:
      tags:
        - auth
      operationId: user_password_reset
      summary: Resets user's password
      parameters:
        - name: uidb64
          in: path
          required: true
          schema:
            type: string
            example: MDEy..
          description: Encrypted user ID
        - name: token
          in: path
          required: true
          schema:
            type: string
            example: MDEy..
          description: Password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - new_password1
                - new_password2
              properties:
                new_password1:
                  type: string
                  format: password
                  example: secret123
                new_password2:
                  type: string
                  format: password
                  example: secret123
      responses:
        '200':
          description: Successful password reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password has been successfully reset.
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing new password fields
                  value:
                    new_password1: ["This field is required."]
                    new_password2: ["This field is required."]
                blank_fields:
                  summary: Blank new password fields
                  value:
                    new_password1: ["This field may not be blank."]
                    new_password2: ["This field may not be blank."]
                similar_to_username_password:
                  summary: Similar to username password
                  value:
                    new_password: ["This password is too similar to the username."]
                similar_to_email_password:
                  summary: Similar to email password
                  value:
                    new_password: ["This password is too similar to the email address."]
                similar_to_first_name_password:
                  summary: Similar to first name password
                  value:
                    new_password: ["This password is too similar to the first name."]
                similar_to_last_name_password:
                  summary: Similar to last name password
                  value:
                    new_password: ["This password is too similar to the last name."]
                common_password:
                  summary: Common password
                  value:
                    new_password: ["This password is too common."]
                short_password:
                  summary: Short password
                  value:
                    new_password: ["This password is too short. It must contain at least 8 characters."]
                numeric_password:
                  summary: Numeric password
                  value:
                    new_password: ["This password is entirely numeric."]
                password_mismatch:
                  summary: Password mismatch
                  value:
                    new_password: ["The two new password fields do not match."]
                invalid_uidb64_or_token:
                  summary: Invalid uidb64 or token
                  value:
                    error: "Something went wrong. Please request a new password reset."
        '500':
          description: Server error
  /auth/logout/:
    post:
      tags:
        - auth
      operationId: user_logout
      summary: Logs out user
      security:
        - bearerAuth: []
      parameters:
        - name: refresh_token
          in: cookie
          required: true
          schema:
            type: string
            example: eyJ0eXAiOiJKV1QiLCJh...
          description: Refresh token
      responses:
        '204':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User has successfully logged out.
        '400':
          description: Missing refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No refresh token found.'"
        '403':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid refresh token."
        '500':
          description: Server error
  /auth/user/:
    get:
      tags:
        - auth
      operationId: user_get
      summary: Gets auth user details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Server error
    put:
      tags:
        - auth
      operationId: user_update
      summary: Updates auth user details
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - username
                - first_name
                - last_name
                - email
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                avatar:
                  type: string
                  format: binary
                bio:
                  type: string
      responses:
        '200':
          description: Successful user update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Missing or invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing required fields
                  value:
                    username: ["This field is required."]
                    first_name: ["This field is required."]
                    last_name: ["This field is required."]
                    email: ["This field is required."]
                duplicate_username:
                  summary: Duplicate username
                  value:
                    username: user with that username already exists.
                email_restriction:
                  summary: Email update restriction
                  value:
                    email: Email cannot be updated.
                large_avatar_size:
                  summary: Large avatar size
                  value:
                    avatar: Avatar size must be less than 2MB
          '500':
            description: Server error
    patch:
      tags:
        - auth
      operationId: user_partial_update
      summary: Partially updates auth user details
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                avatar:
                  type: string
                  format: binary
                bio:
                  type: string
      responses:
        '200':
          description: Successful user update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                duplicate_username:
                  summary: Duplicate username
                  value:
                    username: user with that username already exists.
                email_restriction:
                  summary: Email update restriction
                  value:
                    email: Email cannot be updated.
                large_avatar_size:
                  summary: Large avatar size
                  value:
                    avatar: Avatar size must be less than 2MB
        '500':
          description: Server error

  /auth/user/change-password/:
    post:
      tags:
        - auth
      operationId: user_change_password
      summary: Changes user's password and sets a new refresh cookie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - old_password
                - new_password1
                - new_password2
              properties:
                old_password:
                  type: string
                new_password1:
                  type: string
                new_password2:
                  type: string
      responses:
        '200':
          description: Successful password change
          headers:
            Set-Cookie:
              description: |
                Refresh cookie containing the refresh_token.
                Example: `Set-Cookie: refresh_token=abc123; HttpOnly; Path=/; Secure`
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJh...
        '400':
          description: Invalid input or missing required fields
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
              examples:
                missing_fields:
                  summary: Missing required fields
                  value:
                    old_password: ["This field is required."]
                    new_password1: ["This field is required."]
                    new_password2: ["This field is required."]
                invalid_old_password:
                  summary: Invalid old password
                  value:
                    old_password: Old password is incorrect.
                new_password_similar_to_old:
                  summary: New password is the same as the old password
                  value:
                    new_password: New password cannot be the same as the old password.
                password_mismatch:
                  summary: Password mismatch
                  value:
                    new_password: The two new password fields do not match.
                similar_to_username_password:
                  summary: Similar to username password
                  value:
                    password: ["This password is too similar to the username."]
                similar_to_email_password:
                  summary: Similar to email password
                  value:
                    password: ["This password is too similar to the email address."]
                similar_to_first_name_password:
                  summary: Similar to first name password
                  value:
                    password: ["This password is too similar to the first name."]
                similar_to_last_name_password:
                  summary: Similar to last name password
                  value:
                    password: ["This password is too similar to the last name."]
                common_password:
                  summary: Common password
                  value:
                    password: ["This password is too common."]
                short_password:
                  summary: Short password
                  value:
                    password: ["This password is too short. It must contain at least 8 characters."]
                numeric_password:
                  summary: Numeric password
                  value:
                    password: ["This password is entirely numeric."]
        '500':
          description: Server error
  /auth/user/activities:
    get:
      tags:
        - auth
      operationId: user_activities
      summary: Get user activities
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  next:
                    type: string
                    example: http://localhost:8000/auth/user/activities/?cursor=eyJzdGFydCI6
                  previous:
                    type: string
                    example: http://localhost:8000/auth/user/activities/?cursor=eyJzdGFydCI6
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserActivity'
        '500':
          description: Server error
